#!/usr/bin/env bash
#  7---8---9
#  | X |   |   4           4tw X
#  4---5---6  the          Moves and sizes the active window to the corner or
#  |   |   |  win          half of the screen as specified by X: NW, N, NE, E,
#  1---2---3               SE, S, SW, or W. Or use O to toggle maximized state,
#                          0 to minimize, or no args to toggle show desktop /
#                          hide all state.
#
# Copyright 2011 - 2012 Stephen Niedzielski. Licensed under GPLv3+.
# ------------------------------------------------------------------------------
# 4tw is a supplement for Metacity. I shortcut the numpad keys (KP_7, KP_8,
# KP_9, ...) + <Super> in gconf-editor -> /apps/metacity/*. With KP_5 being
# Origin and KP_0 being minimize.

# TODO: protect against grabbing root / desktop.

# ------------------------------------------------------------------------------
dpkg-query -l wmctrl xdotool > /dev/null || exit

# ------------------------------------------------------------------------------
# Process Args

# "X" marks the spot. Convert from upper to lower.
X="${1,,}"

# ------------------------------------------------------------------------------
if [[ $# -eq 0 ]]
then
  # Toggle based on current state.
  if [[ "$(wmctrl -m|sed -rn 's_Window manager.*showing the desktop.*: (O[FN]+)_\1_p')" == OFF ]]
  then
    wmctrl -k on
  else
    wmctrl -k off
  fi
elif [[ "$X" == 0 ]]
then
  # TODO: is there a way to minimize with wmctrl or should we switch all to
  # xdotool? Which is best?
  xdotool getactivewindow windowminimize
elif [[ "$X" == o ]]
then
  wmctrl -btoggle,maximized_vert,maximized_horz -r:ACTIVE:
else
  # Root workspace full and half width and height.
  rltrb=($(xprop -root -f _NET_WORKAREA 0c ' $0 $1 $2 $3' _NET_WORKAREA|sed -r 's_[^ ]* (.*)_\1_'))
  
  # HACK: for Oneiric, which doesn't seem to take panels into account for sizing?
  #rw=$((${rltrb[2]} - ${rltrb[0]}))
  #rh=$((${rltrb[3]} - ${rltrb[1]}))
  rw=${rltrb[2]}
  rh=${rltrb[3]}
  
  # TODO: something's wrong with the padding calculation in Precise.
  # TODO: something's wrong with repeated south tappings in Precise.
  
  rw2=$(($rw/2))
  rh2=$(($rh/2))
  
  # ----------------------------------------------------------------------------
  # Position
  
  if [[ "$X" == nw || "$X" == sw || "$X" == w || "$X" == n || "$X" == s ]]
  then
    x=0
  else
    x=$rw2
  fi
  let x+=${rltrb[0]}
  
  if [[ "$X" == nw || "$X" == ne || "$X" == n || "$X" == w || "$X" == e ]]
  then
    y=0
  else
    y=$rh2
  fi
  let y+=${rltrb[1]}
  
  # ----------------------------------------------------------------------------
  # Width and Height
  
  if [[ "$X" == n || "$X" == s ]]
  then
    w=$rw
  else
    w=$rw2
  fi
  
  if [[ "$X" == e || "$X" == w ]]
  then
    h=$rh
  else
    h=$rh2
  fi
  
  # Minus frame thickness.
  id=$(xprop -root -f _NET_ACTIVE_WINDOW 0x ' $0' _NET_ACTIVE_WINDOW|sed -r 's_[^ ]* (.*)_\1_')
  flrtb=($(xprop -id $id -f _NET_FRAME_EXTENTS 0c ' $0 $1 $2 $3' _NET_FRAME_EXTENTS|sed -r 's_[^ ]* (.*)_\1_'))
  let w-=${flrtb[0]}
  let w-=${flrtb[1]}
  let h-=${flrtb[2]}
  let h-=${flrtb[3]}
  
  # ----------------------------------------------------------------------------
  # Move and Resize
  
  # Remove max so we may size and move the window. Not sure why I can't do this
  # in one pass.
  wmctrl -bremove,fullscreen -r:ACTIVE:
  wmctrl -bremove,maximized_vert,maximized_horz -r:ACTIVE:
  
  # Finally, move and resize.
  wmctrl -r:ACTIVE: -e0,$x,$y,$w,$h
fi
